//
//  CharacterListRouter.swift
//  RickAndMorty
//
//  Created by Muraviov Kyrylo on 30.03.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharacterListRoutingLogic {
    func routeToCharacterDetails()
}

protocol CharacterListDataPassing {
    var dataStore: CharacterListDataStore? { get }
}

class CharacterListRouter {
    
    // MARK: - External vars
    weak var viewController: CharacterListViewController?
    
    // MARK: - Internal vars
    var dataStore: CharacterListDataStore?
    
    // MARK: - Internal logic
    private func passDataToShowCharacterDetails(source: CharacterListDataStore, destination: inout CharacterDetailsDataStore) {
        guard let view = viewController?.view as? CharacterListView, let selectedRow = view.tableView.indexPathForSelectedRow?.row else { return }
        destination.character = source.characters[selectedRow]
    }
    
    private func navigateToDetailsOrder(source: CharacterListViewController, destination: CharacterDetailsViewController) {
        source.show(destination, sender: nil)
    }
}

// MARK: - Routing logic implementation
extension CharacterListRouter: CharacterListRoutingLogic {
    func routeToCharacterDetails() {
        let detailsVC = CharacterDetailsViewController()
        var detailsDS = detailsVC.router!.dataStore!
        passDataToShowCharacterDetails(source: dataStore!, destination: &detailsDS)
        navigateToDetailsOrder(source: viewController!, destination: detailsVC)
    }
}
