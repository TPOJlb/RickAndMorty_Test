//
//  CharacterListPresenter.swift
//  RickAndMorty
//
//  Created by Muraviov Kyrylo on 30.03.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharacterListPresentationLogic {
    func presentCharacters(response: CharacterList.Response)
}

class CharacterListPresenter {
    
    // MARK: - External vars
    weak var viewController: CharacterListDisplayLogic?
}

// MARK: - Presentation logic implementation
extension CharacterListPresenter: CharacterListPresentationLogic {
    func presentCharacters(response: CharacterList.Response) {
        let viewModel = CharacterList.ViewModel(
            characters: response.characters.map {
                CharacterList.ViewModel.DisplayCharacter(
                    id: $0.id,
                    name: $0.name,
                    image: $0.imageData != nil ? UIImage(data: $0.imageData!) : nil,
                    status: $0.status
                )
            }
        )
        DispatchQueue.main.async {
            self.viewController?.displayCharacters(viewModel: viewModel)
        }
    }
}
